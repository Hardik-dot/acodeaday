class Solution {
    Integer[] dp;
    public int helper(int[][] pairs, int ind){
        if(ind==pairs.length) return 0;
        if(dp[ind]==null){
            dp[ind]=0;
            for(int i=ind+1;i<pairs.length;i++)
                if(pairs[ind][1]<pairs[i][0])
                    dp[ind]=Math.max(dp[ind],helper(pairs,i));
            dp[ind]++;
        }
        return dp[ind];
    }
    public int findLongestChain(int[][] pairs) {
        Arrays.sort(pairs,(x,y)->x[0]-y[0]);
        dp = new Integer[pairs.length+1];
        int ans=0;
        for(int i=0;i<pairs.length;i++){
            if(dp[i]==null)
                helper(pairs,i);
            ans=Math.max(ans,dp[i]);
        }
        return ans;
    }
}
