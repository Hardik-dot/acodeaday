class Solution {
    
    public int partitionDisjoint(int[] nums) {
        int max=nums[0],len=1,nxtmx=nums[0];
        for(int i=1;i<nums.length;i++){
            if(max>nums[i]){
                len=i+1;
                max=nxtmx;
            }else nxtmx=Math.max(nxtmx,nums[i]);
        }
        return len;
    }
    
    public int partitionDisjointspace(int[] nums) {
        int[] minleft=new int[nums.length];
        minleft[nums.length-1]=nums[nums.length-1];
        for(int i=nums.length-2;i>=0;i--)
            minleft[i]=Math.min(minleft[i+1],nums[i]);
        int max=nums[0],i=0;
        for(;i<nums.length-1;i++){
            max=Math.max(max,nums[i]);
            if(max<=minleft[i+1]) return i+1;
        }
        return i;
    }
}
//0 0 3 6 6
//5 5 5 
