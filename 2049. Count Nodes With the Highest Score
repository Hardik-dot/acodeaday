class Solution {
    long ans=0;
    int ct=0;
    public long dfs(List<List<Integer>> tree,int ind){
        long child=0;
        long prod=1,sum=1;
        for(int i=0;i<tree.get(ind).size();i++){
            child=dfs(tree,tree.get(ind).get(i));
            prod*=child;
            sum+=child;
        }
        prod=prod*Math.max(1,tree.size()-sum);
        if(prod==ans) ct++;
        else if(prod>ans){
            ans=prod;ct=1;
        }
        return sum;
    }
    public int countHighestScoreNodes(int[] p) {
        List<List<Integer>> tree = new ArrayList<>();
        for(int i=0;i<p.length;i++)
            tree.add(new ArrayList<>());
        
        for(int i=1;i<p.length;i++)
            tree.get(p[i]).add(i);
        dfs(tree,0);
        return (int)ct;
    }
}
