class Solution {
    public void initSet(Queue<Integer> rad, Queue<Integer> dir, char[] sen) {
        for(int i=0;i<sen.length;i++){
            if(sen[i]=='R') rad.add(i);
            else dir.add(i);
        }
    }
    
    public String predictPartyVictory(String senate) {
        Queue<Integer> rad = new LinkedList<>();
        Queue<Integer> dir = new LinkedList<>();
        initSet(rad,dir,senate.toCharArray());
        
        while(!rad.isEmpty()&&!dir.isEmpty()){
            int r=rad.poll(),d=dir.poll();
            if(r<d)
                rad.add(r+senate.length());
            else dir.add(d+senate.length());
        }
        if(rad.isEmpty()) return "Dire";
        return "Radiant";
    }
}
