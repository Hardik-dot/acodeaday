class Solution {
    Integer[][] dp;
    private int dfs(char[] s, char[] t, int i, int j){
        if(i==s.length||j==t.length||s.length-i<t.length-j) 
            return j == t.length ? 1 : 0;
        if(dp[i][j]==null){
            int ans=dfs(s,t,i+1,j);
            if(s[i]==t[j])
                ans+=dfs(s,t,i+1,j+1);
            dp[i][j]=ans;
        }
        return dp[i][j];
    }
    public int numDistinct(String s, String t) {
        //dp=new Integer[s.length()][t.length()];
        //return dfs(s.toCharArray(),t.toCharArray(),0,0);
        int[][] cache=new int[s.length()+1][t.length()+1];
        
        for(int i=0;i<=s.length();i++)
            cache[i][t.length()]=1;
        
        for(int i=s.length()-1;i>=0;i--){
            for(int j=t.length()-1;j>=0;j--){
                cache[i][j]=cache[i+1][j];
                if(s.charAt(i)==t.charAt(j))
                    cache[i][j]+=cache[i+1][j+1];
            }
        }
        return cache[0][0];
    }
}
