class Solution {
    public int findk(int[] nums){
       int l=0,r=nums.length-1;
        while(l<r){
            int m=l+(r-l)/2;
            if(nums[m]>nums[m+1]) return m+1;
            else if(nums[m]<nums[l]) r=m-1;
            else l=m+1;
        }
        return l;
    }
    
    public int bins(int[] nums, int l, int r, int target){
        while(l<=r){
            int m = l+(r-l)/2;
            if(nums[m]==target) return m;
            if(nums[m]>target) r=m-1;
            else l=m+1;
        }
        return -1;
    }
    public int search(int[] nums, int target) {
        int k = findk(nums);
        if(nums[k]==target) 
            return k;
        int a=bins(nums,0,k-1,target);
        if(a!=-1) 
            return a;
        int b=bins(nums,k,nums.length-1,target);
        return b;
    }
}
