/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    int ct=0;
    public boolean dfs(TreeNode root){
        if(root==null) return true;
        boolean a = dfs(root.left),b=dfs(root.right);
        if(a&&b&&(root.left==null||root.left.val==root.val)&&(root.right==null||root.right.val==root.val)){
            ct++; return true;
        }
        return false;
            
    }
    public int countUnivalSubtrees(TreeNode root) {
        dfs(root);
        return ct;
    }
}
