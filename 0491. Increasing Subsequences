class Solution {
    HashSet<List<Integer>> out;
    public void aux(int[] nums, int i, List<Integer> cur){
        int j=i+1;
        while(j<nums.length){
            if(nums[j]>=nums[i]){
                cur.add(nums[j]);
                if(!out.contains(cur)){
                    out.add(new ArrayList<>(cur));
                    aux(nums,j,cur);
                }
                cur.remove(cur.size()-1);
            }
            j++;
        }
    }
    
    public List<List<Integer>> findSubsequences(int[] nums) {
        List<List<Integer>> ans = new ArrayList<>();
        out = new HashSet<>();
        for(int i=0;i<nums.length;i++){
            List<Integer> tmp = new ArrayList<>();
            tmp.add(nums[i]);
            aux(nums,i,tmp);
        }
        
        Iterator it = out.iterator();
        while(it.hasNext())
            ans.add((List<Integer>)it.next());
        return ans;
    }
}
