class Solution {
    public int[] topKFrequent(int[] nums, int k) {
        HashMap<Integer, Integer> hm = new HashMap<>();
        for(int i=0;i<nums.length;i++){
            hm.put(nums[i],hm.getOrDefault(nums[i],0)+1);
        }
        PriorityQueue<int[]> pq = new PriorityQueue<>((x,y)->y[1]-x[1]);
        for(Map.Entry<Integer,Integer> e:hm.entrySet()){
            pq.add(new int[]{e.getKey(),e.getValue()});
        }
        int[] ans=new int[k];

        while(k>0){
            ans[k-1]=pq.poll()[0];
            k--;
        }
        return ans;
    }
}
