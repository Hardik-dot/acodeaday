class Solution {
    public int[] twoSum(int[] numbers, int target) {
        int l=0,r=numbers.length-1;
        while(l<=r){
            int m = l+(r-l)/2;
            if(numbers[l]+numbers[r]==target) return new int[]{l+1,r+1};
            if(numbers[l]+numbers[r]<target) l++;
            else r--;
        }
        return null;
        
    }
    
    public int[] twoSumMAP(int[] numbers, int target) {
        HashMap<Integer,Integer> hm = new HashMap<>();
        for(int i=0;i<numbers.length;i++){
            if(hm.containsKey(target-numbers[i]))
                return new int[]{hm.get(target-numbers[i])+1,i+1};
            hm.put(numbers[i],i);
        }
        return null;
    }
}
