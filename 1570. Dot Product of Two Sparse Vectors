class SparseVector {
    HashMap<Integer, Integer> mp;
    
    SparseVector(int[] nums) {
        mp = new HashMap<>();
        for(int i=0;i<nums.length;i++){
            if(nums[i]!=0)
            mp.put(i,nums[i]);
        }
    }
    
	// Return the dotProduct of two sparse vectors
    public int dotProduct(SparseVector vec) {
        int ans = 0;
        for(Map.Entry<Integer, Integer> e:this.mp.entrySet()){
            int k = e.getKey(), v = e.getValue();
            if(vec.mp.containsKey(k))
                ans+=v*vec.mp.get(k);
        }
        return ans;
    }
}

// Your SparseVector object will be instantiated and called as such:
// SparseVector v1 = new SparseVector(nums1);
// SparseVector v2 = new SparseVector(nums2);
// int ans = v1.dotProduct(v2);
